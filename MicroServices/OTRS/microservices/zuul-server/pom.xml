<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.vibhu.demo</groupId>
		<artifactId>microservices</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<groupId>com.vibhuti</groupId>
	<artifactId>zuul-server</artifactId>
	<version>0.0.1-zuul-server-SNAPSHOT</version>
	<name>zuul-server</name>
	<description>Zuul Edge Server</description>
	<properties>
		<java.version>11</java.version>
		<start-class>com.otrs.ZuulServerApplication</start-class>
		<docker.registry.name>localhost:5000/</docker.registry.name>
		<docker.repository.name>${docker.registry.name}dilipwork/${project.artifactId}</docker.repository.name>
		<docker.host.address>192.168.99.100</docker.host.address>
		<docker.port>8765</docker.port>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-zuul</artifactId>
		</dependency>
		<dependency>
	      <groupId>org.springframework.boot</groupId>
	      <artifactId>spring-boot-starter-web</artifactId>
	    </dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.34.1</version>
				<configuration>
					<images>
						<image>
							<name>${docker.repository.name}:${project.version}</name>
							<alias>${project.artifactId}</alias>
							<build>
								<from>openjdk:11-jre</from>
								<maintainer>dilipwork</maintainer>
								<assembly>
									<descriptor>docker-assembly.xml</descriptor>
								</assembly>
								<ports>
									<port>
										${docker.port}
									</port>
								</ports>
								<cmd>
									<shell>
										java -Dspring.profiles.active="docker" -jar \
										/maven/${project.build.finalName}.jar server \
										/maven/docker-config.yml
									</shell>
								</cmd>
							</build>
							<run>
								<namingStrategy>alias</namingStrategy>
								<ports>
									<port>
										${docker.port}:8765
									</port>
								</ports>
								<wait>
									<http>
										<url>http://${docker.host.address}:${docker.port}/</url>
									</http>
									<time>500000</time>
								</wait>
								<log>
									<prefix>${project.artifactId}</prefix>
									<color>cyan</color>
								</log>
							</run>
						</image>
					</images>
					<machine>
						<name>default</name>
						<autoCreate>false</autoCreate>
						<createOptions>
							<driver>virtualbox</driver>
							<virtualbox-cpu-count>2</virtualbox-cpu-count>
						</createOptions>
					</machine>
				</configuration>
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<!-- "build" should be used to create the images with the artifact -->
							<goal>build</goal>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
